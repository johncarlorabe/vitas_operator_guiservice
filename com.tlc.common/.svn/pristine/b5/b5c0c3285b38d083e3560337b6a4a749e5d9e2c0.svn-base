package com.tlc.encryption;

import java.security.SecureRandom;

public class PasswordGenerator {
	public static final int UPPER_ALPHA = 1;
	public static final int LOWER_ALPHA = 2;
	public static final int NUMERIC_CHAR = 4;
	public static final int SYMBOL1_CHAR = 8;
	public static final String upper =   "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ";
	public static final String lower =   "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz";
	public static final String numeric = "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
	public static final String symbol1 = " !\"$%^&*()-_=+[{]};:'@#~|,<.>/? !\"$%^&*()-_=+[{]};:'@#~|,<.>/? !\"$%^&*()-_=+[{]};:'@#~|,<.>/? !\"$%^&*()-_=+[{]};:'@#~|,<.>/?";

	public static String allsymbol = "";
	public static ThreadLocal<SecureRandom> randomgenerator = new ThreadLocal<SecureRandom>(){
		@Override
		protected SecureRandom initialValue() {
			return new SecureRandom();
		}
	};
	public static String GetPassword(int len, int option){
		if(option <= 0)
			option = 15; 
		StringBuilder password = new StringBuilder();
		StringBuilder allsymbol = new StringBuilder();
		if((option & UPPER_ALPHA) == UPPER_ALPHA)
			allsymbol.append(upper);
		if((option & LOWER_ALPHA) == LOWER_ALPHA)
			allsymbol.append(lower);
		if((option & NUMERIC_CHAR) == NUMERIC_CHAR)
			allsymbol.append(numeric);
		if((option & SYMBOL1_CHAR) == SYMBOL1_CHAR)
			allsymbol.append(symbol1);
		int n = allsymbol.length();
		for(int i = 0; i < len; i++){
			password.append(allsymbol.charAt(randomgenerator.get().nextInt(n)));
		}
		return password.toString();
	}
	public static boolean Validate(String password, int option){
		return true;
	}
}
